{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useMovement(maxMovement) {\n  _s();\n\n  const [dir, setDir] = useState(0);\n  const [position, setPosition] = useState(0);\n  const [movement, setMovement] = useState(0);\n  const directions = {\n    up: 0,\n    left: 1,\n    right: 2,\n    down: 3\n  };\n\n  function movements(dir) {\n    setDir(directions[dir]);\n    setMovement(prev => prev < maxMovement - 1 ? prev + 1 : 0);\n  }\n\n  return {\n    movements,\n    dir,\n    movement,\n    directions\n  };\n}\n\n_s(useMovement, \"Mn9cuZey5zsfHD4NTS3aMlDPvac=\");","map":{"version":3,"sources":["C:/Users/markm/OneDrive/Desktop/gamedeveloper/react-game/src/game-tools/utils/hooks/movement/useMovement.js"],"names":["useState","useMovement","maxMovement","dir","setDir","position","setPosition","movement","setMovement","directions","up","left","right","down","movements","prev"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAGA,eAAe,SAASC,WAAT,CAAqBC,WAArB,EAAiC;AAAA;;AAC5C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMS,UAAU,GAAG;AACfC,IAAAA,EAAE,EAAE,CADW;AAEfC,IAAAA,IAAI,EAAE,CAFS;AAGfC,IAAAA,KAAK,EAAE,CAHQ;AAIfC,IAAAA,IAAI,EAAE;AAJS,GAAnB;;AAOA,WAASC,SAAT,CAAmBX,GAAnB,EAAuB;AACnBC,IAAAA,MAAM,CAACK,UAAU,CAACN,GAAD,CAAX,CAAN;AACAK,IAAAA,WAAW,CAACO,IAAI,IAAIA,IAAI,GAACb,WAAW,GAAC,CAAjB,GAAqBa,IAAI,GAAC,CAA1B,GAA8B,CAAvC,CAAX;AACH;;AAED,SAAM;AACFD,IAAAA,SADE;AAEFX,IAAAA,GAFE;AAGFI,IAAAA,QAHE;AAIFE,IAAAA;AAJE,GAAN;AAOH;;GAxBuBR,W","sourcesContent":["import {useState} from \"react\";\r\n\r\n\r\nexport default function useMovement(maxMovement){\r\n    const [dir, setDir] = useState(0);\r\n    const [position, setPosition] = useState(0);\r\n    const [movement, setMovement] = useState(0);\r\n\r\n    const directions = {\r\n        up: 0,\r\n        left: 1,\r\n        right: 2,\r\n        down: 3,\r\n    }\r\n\r\n    function movements(dir){\r\n        setDir(directions[dir]);\r\n        setMovement(prev => prev<maxMovement-1 ? prev+1 : 0);\r\n    }\r\n\r\n    return{\r\n        movements,\r\n        dir,\r\n        movement,\r\n        directions\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}