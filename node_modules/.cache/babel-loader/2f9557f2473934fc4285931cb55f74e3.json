{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nexport default function useGamePadPress(fn) {\n  _s();\n\n  useEffect(() => {\n    var i = 1;\n    window.addEventListener(\"gamepadconnected\", function (e) {\n      var gp = navigator.getGamepads()[e.gamepad.index];\n      alert(\"A \" + gp.id + \" was successfully detected!\");\n      setInterval(function () {\n        // ===> Get a fresh GamepadList! <===\n        var gp = navigator.getGamepads()[e.gamepad.index];\n        console.log(gp.buttons[0]);\n      }, 100);\n    });\n  }, [fn]);\n}\n\n_s(useGamePadPress, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["C:/Users/markm/OneDrive/Desktop/gamedeveloper/react-game/src/game-tools/utils/hooks/gamepad-press/useGamePadPress.js"],"names":["useEffect","useGamePadPress","fn","i","window","addEventListener","e","gp","navigator","getGamepads","gamepad","index","alert","id","setInterval","console","log","buttons"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AAGA,eAAe,SAASC,eAAT,CAAyBC,EAAzB,EAA6B;AAAA;;AAExCF,EAAAA,SAAS,CAAC,MAAK;AACP,QAAIG,CAAC,GAAG,CAAR;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,kBAAxB,EAA4C,UAASC,CAAT,EAAY;AACpD,UAAIC,EAAE,GAAGC,SAAS,CAACC,WAAV,GAAwBH,CAAC,CAACI,OAAF,CAAUC,KAAlC,CAAT;AACAC,MAAAA,KAAK,CAAC,OAAOL,EAAE,CAACM,EAAV,GAAe,6BAAhB,CAAL;AAEAC,MAAAA,WAAW,CAAC,YAAU;AAElB;AACA,YAAIP,EAAE,GAAGC,SAAS,CAACC,WAAV,GAAwBH,CAAC,CAACI,OAAF,CAAUC,KAAlC,CAAT;AAEDI,QAAAA,OAAO,CAACC,GAAR,CAAYT,EAAE,CAACU,OAAH,CAAW,CAAX,CAAZ;AACF,OANU,EAMR,GANQ,CAAX;AAOH,KAXD;AAYH,GAdI,EAeH,CAACf,EAAD,CAfG,CAAT;AAiBH;;GAnBuBD,e","sourcesContent":["import { useEffect } from \"react\";\r\n\r\n\r\nexport default function useGamePadPress(fn) {\r\n\r\n    useEffect(() =>{\r\n            var i = 1;\r\n            window.addEventListener(\"gamepadconnected\", function(e) {\r\n                var gp = navigator.getGamepads()[e.gamepad.index];\r\n                alert(\"A \" + gp.id + \" was successfully detected!\")\r\n\r\n                setInterval(function(){\r\n\r\n                    // ===> Get a fresh GamepadList! <===\r\n                    var gp = navigator.getGamepads()[e.gamepad.index];\r\n\r\n                   console.log(gp.buttons[0]);\r\n                }, 100)\r\n            });\r\n        }\r\n        , [fn]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}