{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nexport default function useMovement(maxMovement) {\n  _s();\n\n  const [dir, setDir] = useState(0);\n  const [position, setPosition] = useState(0);\n  const [movement, setMovement] = useState(0);\n  const directions = {\n    up: 0,\n    left: 1,\n    right: 2,\n    down: 3\n  };\n  const movementsSize = 16;\n  const modifier = {\n    up: {\n      x: 0,\n      y: movementsSize\n    },\n    left: {\n      x: -movementsSize,\n      y: 0\n    },\n    right: {\n      x: 0,\n      movementsSize\n    },\n    down: {\n      x: 0,\n      y: -movementsSize\n    }\n  };\n\n  function movements(dir) {\n    setDir(prev => {\n      if (directions[dir] === prev) {\n        console.log(\"movement\");\n        move(dir);\n      }\n\n      ;\n      return directions[dir];\n    });\n    setMovement(prev => prev < maxMovement - 1 ? prev + 1 : 0);\n  }\n\n  function move(dir) {\n    setPosition(prev => ({\n      x: prev.x + modifier[dir].x,\n      y: prev.y + modifier[dir].y\n    }));\n  }\n\n  return {\n    movements,\n    dir,\n    movement,\n    position\n  };\n}\n\n_s(useMovement, \"Mn9cuZey5zsfHD4NTS3aMlDPvac=\");","map":{"version":3,"sources":["C:/Users/markm/OneDrive/Desktop/gamedeveloper/react-game/src/game-tools/utils/hooks/movement/useMovement.js"],"names":["useState","useMovement","maxMovement","dir","setDir","position","setPosition","movement","setMovement","directions","up","left","right","down","movementsSize","modifier","x","y","movements","prev","console","log","move"],"mappings":";;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AAGA,eAAe,SAASC,WAAT,CAAqBC,WAArB,EAAkC;AAAA;;AAC7C,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBJ,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,CAAD,CAAxC;AAEA,QAAMS,UAAU,GAAG;AACfC,IAAAA,EAAE,EAAE,CADW;AAEfC,IAAAA,IAAI,EAAE,CAFS;AAGfC,IAAAA,KAAK,EAAE,CAHQ;AAIfC,IAAAA,IAAI,EAAE;AAJS,GAAnB;AAOA,QAAMC,aAAa,GAAG,EAAtB;AAEA,QAAMC,QAAQ,GAAG;AACbL,IAAAA,EAAE,EAAE;AACAM,MAAAA,CAAC,EAAE,CADH;AACMC,MAAAA,CAAC,EAAEH;AADT,KADS;AAIbH,IAAAA,IAAI,EAAE;AACFK,MAAAA,CAAC,EAAE,CAACF,aADF;AACiBG,MAAAA,CAAC,EAAE;AADpB,KAJO;AAObL,IAAAA,KAAK,EAAE;AACHI,MAAAA,CAAC,EAAE,CADA;AACGF,MAAAA;AADH,KAPM;AAUbD,IAAAA,IAAI,EAAE;AACFG,MAAAA,CAAC,EAAE,CADD;AACIC,MAAAA,CAAC,EAAE,CAACH;AADR;AAVO,GAAjB;;AAeA,WAASI,SAAT,CAAmBf,GAAnB,EAAwB;AACpBC,IAAAA,MAAM,CAACe,IAAI,IAAI;AACX,UAAIV,UAAU,CAACN,GAAD,CAAV,KAAoBgB,IAAxB,EAA8B;AAC1BC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAC,QAAAA,IAAI,CAACnB,GAAD,CAAJ;AACH;;AACD;AACA,aAAOM,UAAU,CAACN,GAAD,CAAjB;AACH,KAPK,CAAN;AAQAK,IAAAA,WAAW,CAACW,IAAI,IAAIA,IAAI,GAAGjB,WAAW,GAAG,CAArB,GAAyBiB,IAAI,GAAG,CAAhC,GAAoC,CAA7C,CAAX;AACH;;AAED,WAASG,IAAT,CAAcnB,GAAd,EAAmB;AACfG,IAAAA,WAAW,CAACa,IAAI,KACZ;AACIH,MAAAA,CAAC,EAAEG,IAAI,CAACH,CAAL,GAASD,QAAQ,CAACZ,GAAD,CAAR,CAAca,CAD9B;AAEIC,MAAAA,CAAC,EAAEE,IAAI,CAACF,CAAL,GAASF,QAAQ,CAACZ,GAAD,CAAR,CAAcc;AAF9B,KADY,CAAL,CAAX;AAKH;;AAED,SAAO;AACHC,IAAAA,SADG;AAEHf,IAAAA,GAFG;AAGHI,IAAAA,QAHG;AAIHF,IAAAA;AAJG,GAAP;AAQH;;GAzDuBJ,W","sourcesContent":["import {useState} from \"react\";\r\n\r\n\r\nexport default function useMovement(maxMovement) {\r\n    const [dir, setDir] = useState(0);\r\n    const [position, setPosition] = useState(0);\r\n    const [movement, setMovement] = useState(0);\r\n\r\n    const directions = {\r\n        up: 0,\r\n        left: 1,\r\n        right: 2,\r\n        down: 3,\r\n    }\r\n\r\n    const movementsSize = 16;\r\n\r\n    const modifier = {\r\n        up: {\r\n            x: 0, y: movementsSize\r\n        },\r\n        left: {\r\n            x: -movementsSize, y: 0\r\n        },\r\n        right: {\r\n            x: 0, movementsSize\r\n        },\r\n        down: {\r\n            x: 0, y: -movementsSize\r\n        }\r\n    }\r\n\r\n    function movements(dir) {\r\n        setDir(prev => {\r\n            if (directions[dir] === prev) {\r\n                console.log(\"movement\")\r\n                move(dir)\r\n            }\r\n            ;\r\n            return directions[dir];\r\n        });\r\n        setMovement(prev => prev < maxMovement - 1 ? prev + 1 : 0);\r\n    }\r\n\r\n    function move(dir) {\r\n        setPosition(prev => (\r\n            {\r\n                x: prev.x + modifier[dir].x,\r\n                y: prev.y + modifier[dir].y,\r\n            }));\r\n    }\r\n\r\n    return {\r\n        movements,\r\n        dir,\r\n        movement,\r\n        position,\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}