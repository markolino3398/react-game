{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React from \"react\";\nexport default function useFullscreenStatus(elRef) {\n  _s();\n\n  const [isFullscreen, setIsFullscreen] = React.useState(document[getBrowserFullscreenElementProp()] != null);\n\n  const setFullscreen = () => {\n    if (elRef.current == null) return;\n    elRef.current.requestFullscreen().then(() => {\n      setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n    }).catch(() => {\n      setIsFullscreen(false);\n    });\n  };\n\n  React.useLayoutEffect(() => {\n    document.onfullscreenchange = () => setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\n\n    return () => document.onfullscreenchange = undefined;\n  });\n  return [isFullscreen, setFullscreen];\n}\n\n_s(useFullscreenStatus, \"5pHVRE6UZLliYEom3KbKTN7Kyds=\");\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== \"undefined\") {\n    return \"fullscreenElement\";\n  } else if (typeof document.mozFullScreenElement !== \"undefined\") {\n    return \"mozFullScreenElement\";\n  } else if (typeof document.msFullscreenElement !== \"undefined\") {\n    return \"msFullscreenElement\";\n  } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\n    return \"webkitFullscreenElement\";\n  } else {\n    throw new Error(\"fullscreenElement is not supported by this browser\");\n  }\n}","map":{"version":3,"sources":["C:/Users/markm/OneDrive/Desktop/gamedeveloper/react-game/src/game-tools/utils/fullscreen/useFullScreenStatus.js"],"names":["React","useFullscreenStatus","elRef","isFullscreen","setIsFullscreen","useState","document","getBrowserFullscreenElementProp","setFullscreen","current","requestFullscreen","then","catch","useLayoutEffect","onfullscreenchange","undefined","fullscreenElement","mozFullScreenElement","msFullscreenElement","webkitFullscreenElement","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AAAA;;AAC/C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,KAAK,CAACK,QAAN,CACpCC,QAAQ,CAACC,+BAA+B,EAAhC,CAAR,IAA+C,IADX,CAAxC;;AAIA,QAAMC,aAAa,GAAG,MAAM;AACxB,QAAIN,KAAK,CAACO,OAAN,IAAiB,IAArB,EAA2B;AAE3BP,IAAAA,KAAK,CAACO,OAAN,CACKC,iBADL,GAEKC,IAFL,CAEU,MAAM;AACRP,MAAAA,eAAe,CAACE,QAAQ,CAACC,+BAA+B,EAAhC,CAAR,IAA+C,IAAhD,CAAf;AACH,KAJL,EAKKK,KALL,CAKW,MAAM;AACTR,MAAAA,eAAe,CAAC,KAAD,CAAf;AACH,KAPL;AAQH,GAXD;;AAaAJ,EAAAA,KAAK,CAACa,eAAN,CAAsB,MAAM;AACxBP,IAAAA,QAAQ,CAACQ,kBAAT,GAA8B,MAC1BV,eAAe,CAACE,QAAQ,CAACC,+BAA+B,EAAhC,CAAR,IAA+C,IAAhD,CADnB;;AAGA,WAAO,MAAOD,QAAQ,CAACQ,kBAAT,GAA8BC,SAA5C;AACH,GALD;AAOA,SAAO,CAACZ,YAAD,EAAeK,aAAf,CAAP;AACH;;GA1BuBP,mB;;AA4BxB,SAASM,+BAAT,GAA2C;AACvC,MAAI,OAAOD,QAAQ,CAACU,iBAAhB,KAAsC,WAA1C,EAAuD;AACnD,WAAO,mBAAP;AACH,GAFD,MAEO,IAAI,OAAOV,QAAQ,CAACW,oBAAhB,KAAyC,WAA7C,EAA0D;AAC7D,WAAO,sBAAP;AACH,GAFM,MAEA,IAAI,OAAOX,QAAQ,CAACY,mBAAhB,KAAwC,WAA5C,EAAyD;AAC5D,WAAO,qBAAP;AACH,GAFM,MAEA,IAAI,OAAOZ,QAAQ,CAACa,uBAAhB,KAA4C,WAAhD,EAA6D;AAChE,WAAO,yBAAP;AACH,GAFM,MAEA;AACH,UAAM,IAAIC,KAAJ,CAAU,oDAAV,CAAN;AACH;AACJ","sourcesContent":["import React from \"react\";\r\n\r\nexport default function useFullscreenStatus(elRef) {\r\n    const [isFullscreen, setIsFullscreen] = React.useState(\r\n        document[getBrowserFullscreenElementProp()] != null\r\n    );\r\n\r\n    const setFullscreen = () => {\r\n        if (elRef.current == null) return;\r\n\r\n        elRef.current\r\n            .requestFullscreen()\r\n            .then(() => {\r\n                setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n            })\r\n            .catch(() => {\r\n                setIsFullscreen(false);\r\n            });\r\n    };\r\n\r\n    React.useLayoutEffect(() => {\r\n        document.onfullscreenchange = () =>\r\n            setIsFullscreen(document[getBrowserFullscreenElementProp()] != null);\r\n\r\n        return () => (document.onfullscreenchange = undefined);\r\n    });\r\n\r\n    return [isFullscreen, setFullscreen];\r\n}\r\n\r\nfunction getBrowserFullscreenElementProp() {\r\n    if (typeof document.fullscreenElement !== \"undefined\") {\r\n        return \"fullscreenElement\";\r\n    } else if (typeof document.mozFullScreenElement !== \"undefined\") {\r\n        return \"mozFullScreenElement\";\r\n    } else if (typeof document.msFullscreenElement !== \"undefined\") {\r\n        return \"msFullscreenElement\";\r\n    } else if (typeof document.webkitFullscreenElement !== \"undefined\") {\r\n        return \"webkitFullscreenElement\";\r\n    } else {\r\n        throw new Error(\"fullscreenElement is not supported by this browser\");\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}